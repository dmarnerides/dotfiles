-- Set background and colorscheme name
vim.o.background = "dark"
vim.g.colors_name = "mycolorscheme"
local palette = {
  black          = "#181818",
  very_dark_gray = "#252526",
  dark_gray      = "#282828",
  dark_blue_gray = "#282c34",
  charcoal       = "#2c323c",
  nontext_gray   = "#3b4048",
  slate          = "#3e4452",
  dark_gray2     = "#515052",
  dove           = "#5c6370",
  slate_gray     = "#707070",
  gray           = "#858585",
  light_gray2    = "#aeafad",
  light_gray     = "#abb2bf",
  silver         = "#BBBBBB",
  light_silver   = "#d4d4d4",
  maroon         = "#94151b",
  red            = "#d16969",
  salmon         = "#ef5f70",
  orange         = "#ce9178",
  amber          = "#ff8800",
  sandy          = "#d7ba7d",
  yellow         = "#dcdcaa",
  bright_yellow  = "#ffff00",
  gold           = "#ffcc66",
  light_green    = "#b5cea8",
  olive          = "#587c0c",
  green          = "#608b4e",
  mint           = "#81b88b",
  turquoise      = "#4ec9b0",
  cyan           = "#9cdcfe",
  cyan_blue      = "#00c7df",
  sky_blue       = "#29b8d8",
  teal           = "#0c7d9d",
  blue           = "#569cd6",
  dark_teal      = "#264f78",
  magenta        = "#c586c0",
}

local p = palette
-- Second level: semantic colors using values from the palette.
local colors = {
  normal_fg               = p.light_gray,
  normal_bg               = p.black,
  normalnc_bg             = p.dark_gray,
  comment                 = p.green,
  constant                = p.yellow,
  string                  = p.orange,
  number                  = p.light_green,
  float                   = p.light_green,
  boolean                 = p.blue,
  statement               = p.magenta,
  label                   = p.cyan,
  title                   = p.turquoise,
  error                   = p.red,
  todo_fg                 = p.silver,
  todo_bg                 = p.green,
  underlined              = p.turquoise,
  cursor_fg               = p.dark_gray2,
  cursor_bg               = p.light_gray2,
  colorcolumn_bg          = p.charcoal,
  signcolumn_bg           = p.black,
  directory               = p.blue,
  diffadd_bg              = p.green,
  vertsplit               = p.slate,
  nontext                 = p.nontext_gray,
  pmenu_fg                = p.light_gray,
  pmenu_bg                = p.dark_blue_gray,
  pmenu_sel_fg            = p.black,
  pmenu_sel_bg            = p.blue,
  line_nr                 = p.gray,
  statusline_fg           = p.light_gray,
  statusline_bg           = p.black,
  tabline_fg              = p.dove,
  tabline_sel_fg          = p.light_gray,
  tabline_fill_bg         = p.very_dark_gray,
  visual_bg               = p.black,
  quickfix_bg             = p.dove,
  search_fg               = p.light_silver,
  search_bg               = p.dark_teal,
  spellcap                = p.sandy,
  incsearch_bg            = p.incsearch_blue,
  tsstructure             = p.magenta,
  tstext                  = p.bright_yellow,
  whichkey_group          = p.sky_blue,
  linterror               = p.amber,
  gitsigns_add_fg         = p.olive,
  gitsigns_change_fg      = p.teal,
  gitsigns_delete_fg      = p.maroon,
  lsp_signinformation_fg  = p.gold,
  nvimtree_symlink        = p.sky_blue,
  nvimtree_exec_fg        = p.mint,
}

local c = colors

local highlights = {
  Normal             = { fg = c.normal_fg, bg = c.normal_bg },
  NormalNC           = { bg = c.normalnc_bg },
  Comment            = { fg = c.comment, italic=true},
  Constant           = { fg = c.constant },
  String             = { fg = c.string },
  Character          = { fg = c.string },
  Number             = { fg = c.number },
  Boolean            = { fg = c.boolean },
  Float              = { fg = c.float },
  Identifier         = { fg = c.boolean },
  Function           = { fg = c.constant },
  Statement          = { fg = c.statement },
  Conditional        = { fg = c.statement },
  Repeat             = { fg = c.statement },
  Label              = { fg = c.label },
  Operator           = { fg = c.statement },
  Keyword            = { fg = c.boolean },
  Exception          = { fg = c.statement },
  PreProc            = { fg = c.constant },
  Include            = { fg = c.statement },
  Define             = { fg = c.statement },
  Title              = { fg = c.title },
  Macro              = { fg = c.statement },
  PreCondit          = { fg = c.label },
  Type               = { fg = c.label },
  StorageClass       = { fg = c.label },
  Structure          = { fg = c.constant },
  Typedef            = { fg = c.constant },
  Special            = { fg = c.boolean, italic = true },
  SpecialComment     = { fg = c.tabline_fg },
  Error              = { fg = c.error, bg = c.normal_bg, bold = true },
  Todo               = { fg = c.todo_fg, bg = c.todo_bg, bold = true, italic = true },
  Underlined         = { fg = c.underlined, underline = true },
  Cursor             = { fg = c.cursor_fg, bg = c.cursor_bg },
  ColorColumn        = { bg = c.colorcolumn_bg },
  CursorLineNr       = { fg = c.normal_fg, bg = c.normal_bg, bold = true },
  SignColumn         = { bg = c.signcolumn_bg },
  Conceal            = { fg = c.tabline_fg },
  CursorColumn       = { bg = c.colorcolumn_bg },
  CursorLine         = { bg = c.colorcolumn_bg },
  Directory          = { fg = c.directory },
  DiffAdd            = { fg = c.normal_bg, bg = c.diffadd_bg },
  DiffChange         = { fg = c.constant, underline = true },
  DiffDelete         = { fg = c.error, bg = c.normal_bg },
  DiffText           = { fg = c.normal_bg, bg = c.constant },
  ErrorMsg           = { fg = c.error },
  VertSplit          = { fg = c.vertsplit, bg = c.normal_bg },
  Folded             = { fg = c.tabline_fg },
  FoldColumn         = {},
  IncSearch          = { bg = c.incsearch_bg },
  LineNr             = { fg = c.line_nr, bg = c.normal_bg },
  NonText            = { fg = c.nontext },
  Pmenu              = { fg = c.pmenu_fg, bg = c.pmenu_bg },
  PmenuSel           = { fg = c.pmenu_sel_fg, bg = c.pmenu_sel_bg },
  PmenuSbar          = { bg = c.nontext },
  PmenuThumb         = { bg = c.pmenu_fg },
  Question           = { fg = c.statement },
  QuickFixLine       = { bg = c.quickfix_bg },
  Search             = { fg = c.search_fg, bg = c.search_bg },
  SpecialKey         = { fg = c.nontext },
  SpellBad           = { fg = c.error, underline = true },
  SpellCap           = { fg = c.spellcap },
  SpellLocal         = { fg = c.spellcap },
  SpellRare          = { fg = c.spellcap },
  StatusLine         = { fg = c.statusline_fg, bg = c.statusline_bg },
  StatusLineNC       = { fg = c.statusline_fg, bg = c.normal_bg },
  StatusLineTerm     = { fg = c.statusline_fg, bg = p.slate },
  StatusLineTermNC   = { fg = c.statusline_fg, bg = c.normal_bg },
  TabLine            = { fg = c.tabline_fg },
  TabLineSel         = { fg = c.tabline_sel_fg },
  TabLineFill        = { bg = c.tabline_fill_bg },
  Terminal           = { fg = c.pmenu_fg, bg = c.normal_bg },
  Visual             = { bg = c.visual_bg, reverse = true },
  VisualNOS          = { fg = c.vertsplit },
  WarningMsg         = { fg = c.constant },
  WildMenu           = { fg = c.normal_fg, bg = c.directory },
  EndOfBuffer        = { fg = c.normal_bg, bg = c.normal_bg },

  -- Tree-sitter groups
  TSComment          = { fg = c.comment },
  TSError            = { fg = c.error },
  TSPunctDelimiter   = { fg = c.normal_fg },
  TSPunctBracket     = { fg = c.normal_fg },
  TSPunctSpecial     = { fg = c.normal_fg },
  TSConstant         = { fg = c.constant },
  TSConstBuiltin     = { fg = c.boolean },
  TSConstMacro       = { fg = c.title },
  TSStringRegex      = { fg = c.string },
  TSString           = { fg = c.string },
  TSStringEscape     = { fg = c.spellcap },
  TSCharacter        = { fg = c.string },
  TSNumber           = { fg = c.number },
  TSBoolean          = { fg = c.boolean },
  TSFloat            = { fg = c.number },
  TSAnnotation       = { fg = c.constant },
  TSAttribute        = { fg = c.title },
  TSNamespace        = { fg = c.title },
  TSFuncBuiltin      = { fg = c.constant },
  TSFunction         = { fg = c.constant },
  TSFuncMacro        = { fg = c.constant },
  TSParameter        = { fg = c.label },
  TSParameterReference = { fg = c.label },
  TSMethod           = { fg = c.constant },
  TSField            = { fg = c.label },
  TSProperty         = { fg = c.label },
  TSConstructor      = { fg = c.title },
  TSConditional      = { fg = c.statement },
  TSRepeat           = { fg = c.statement },
  TSLabel            = { fg = c.label },
  TSKeyword          = { fg = c.boolean },
  TSKeywordFunction  = { fg = c.statement },
  TSKeywordOperator  = { fg = c.boolean },
  TSOperator         = { fg = c.normal_fg },
  TSException        = { fg = c.statement },
  TSType             = { fg = c.title },
  TSTypeBuiltin      = { fg = c.boolean },
  TSStructure        = { fg = c.tsstructure },
  TSInclude          = { fg = c.statement },
  TSVariable         = { fg = c.label },
  TSVariableBuiltin  = { fg = c.label },
  TSText             = { fg = c.tstext },
  TSStrong           = { fg = c.tstext },
  TSEmphasis         = { fg = c.tstext },
  TSUnderline        = { fg = c.tstext },
  TSTitle            = { fg = c.tstext },
  TSLiteral          = { fg = c.string },
  TSURI              = { underline = true },
  TSTag              = { fg = c.boolean },
  TSTagDelimiter     = { fg = c.tabline_fg },
  TSQueryLinterError = { fg = c.linterror},

  -- WhichKey groups
  WhichKey          = { fg = c.statement },
  WhichKeySeperator = { fg = c.comment },
  WhichKeyGroup     = { fg = c.whichkey_group },
  WhichKeyDesc      = { fg = c.boolean },

  -- Diff groups
  diffAdded         = { fg = c.comment },
  diffRemoved       = { fg = c.error },
  diffFileId        = { fg = c.boolean, bold = true, reverse = true },
  diffFile          = { fg = c.nontext },
  diffNewFile       = { fg = c.comment },
  diffOldFile       = { fg = c.error },

  -- Debug groups
  debugPc           = { bg = c.title },
  debugBreakpoint   = { fg = c.error, reverse = true },

  -- GitSigns groups
  GitSignsAdd       = { fg = c.gitsigns_add_fg,    bg = c.normal_bg },
  GitGutterAdd      = { fg = c.gitsigns_add_fg,    bg = c.normal_bg },
  GitSignsChange    = { fg = c.gitsigns_change_fg, bg = c.normal_bg },
  GitGutterChange   = { fg = c.gitsigns_change_fg, bg = c.normal_bg },
  GitSignsDelete    = { fg = c.gitsigns_delete_fg, bg = c.normal_bg },
  GitGutterDelete   = { fg = c.gitsigns_delete_fg, bg = c.normal_bg },

  -- LSP Diagnostic groups
  LspDiagnosticsUnderlineHint = { fg = p.blue, bg = c.normal_bg },
  LspDiagnosticsSignError = { fg = c.error, bg = c.normal_bg, bold = true },
  LspDiagnosticsSignWarning = { fg = c.linterror, bg = c.normal_bg },
  LspDiagnosticsSignInformation = { fg = c.lsp_signinformation_fg, bg = c.normal_bg },
  LspDiagnosticsSignHint = { fg = p.sky_blue_2, bg = c.normal_bg },
  LspDiagnosticsVirtualTextError = { fg = c.error, bg = c.normal_bg },
  LspDiagnosticsVirtualTextWarning = { fg = c.linterror, bg = c.normal_bg },
  LspDiagnosticsVirtualTextInformation = { fg = c.lsp_signinformation_fg, bg = c.normal_bg },
  LspDiagnosticsVirtualTextHint = { fg = p.sky_blue_2, bg = c.normal_bg },

  -- NvimTree groups
  NvimTreeImageFile = { fg = c.statement },
  NvimTreeGitDirty  = { fg = p.mint},
  NvimTreeGitDeleted = { fg = p.mint},
  NvimTreeGitStaged = { fg = p.mint},
  NvimTreeGitMerge  = { fg = p.mint},
  NvimTreeGitRenamed= { fg = p.mint},
  NvimTreeGitNew    = { fg = p.mint},
  NvimTreeIndentMarker = { fg = c.tabline_fg },
  NvimTreeSymlink   = { fg = c.nvimtree_symlink },
  NvimTreeFolderIcon = { fg = c.boolean },
  NvimTreeRootFolder = { fg = c.normal_fg, bold = true },
  NvimTreeExecFile  = { fg = c.nvimtree_exec_fg },
  NvimTreeSpecialFile = { fg = c.linterror},

  -- Other groups
  IndentBlanklineContextChar = { fg = p.slate_gray },
}

-- Apply all highlight groups.
for group, opts in pairs(highlights) do
  vim.api.nvim_set_hl(0, group, opts)
end
